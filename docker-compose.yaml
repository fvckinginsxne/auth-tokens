services:
  app:
    image: golang:1.24.2-alpine
    working_dir: /app
    volumes:
      - .:/app
      - ./.env:/app/.env
    ports:
      - "${SERVER_PORT}:8000"
    environment:
      - CONFIG_PATH=/app/.env
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    command: >
      sh -c "
      go mod tidy &&
      cd ./cmd/auth-tokens/ &&
      go build -o /app/main . &&
      /app/main
      "

  migrate:
    image: migrate/migrate:v4.18.2
    volumes:
      - ./migrations:/migrations
    command:
      -path=./migrations/
      -database=postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable
      up
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${DB_USER} -d $${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
